% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/thr_seeke.R
\name{local_thr_optimization}
\alias{local_thr_optimization}
\title{Find optimal threshold according to the subgraph of original graph}
\usage{
local_thr_optimization(
  S,
  partition,
  which_group,
  expansion_mode = "basic",
  cl_score = "complexity",
  n_init_steps = 10,
  keep_init_eval_history = TRUE,
  keep_init_partitions = FALSE,
  precis = TRUE,
  tol = 0.1,
  keep_final_partition = TRUE,
  custom_partitioner = NULL,
  custom_partitioner_otherArgs = NULL,
  ...
)
}
\arguments{
\item{S}{A square matrix of weights of a undirected similarity graph. Assumed to be symmetric.}

\item{partition}{An intger vector of group labels, its length has to be equal to nrow/ncol of \code{S}.}

\item{which_group}{Specification of the group in \code{partition} which should be used for threshold search, see details.}

\item{expansion_mode, cl_score, n_init_steps, keep_init_eval_history, keep_init_partitions, precis, tol, keep_final_partition, custom_partitioner, custom_partitioner_otherArgs, ...}{All other arguments are passed to \code{\link[=thr_oprimizer]{thr_oprimizer()}}, see repsective help page for details.}
}
\value{
A list with the following fields:
\itemize{
\item \code{thr} Threshold of weights in \code{S} that maximizes \code{cl_score} on a thresholded \code{S} of a subgraph
\item \code{objective} A value of \code{cl_score} corresponding to partition obtained using \code{thr} on the subgraph.
\item  \code{maximizer_partition} A partition which resulted at \code{cl_score} value in \code{objective}(set if \code{keep_final_partition} is \code{TRUE})
\item \code{init_search_points}, \code{init_scores} Vectors of length \code{n_init_steps} containing search points and corresponding scores computed in initial search (set if \code{keep_init_eval_history} is \code{TRUE} and \code{n_init_steps} is not \code{NULL})
\item \code{init_partitions} A list of length \code{n_init_steps} containing clique partitions corresponding to scores and search points mentioned above (set if \code{keep_init_partitions} is \code{TRUE} and \code{n_init_steps} is not \code{NULL})
\item \code{which_group} A label of the group of \code{parition} that was used to find \code{thr}.
}
}
\description{
This function will run either \code{\link[=thr_optimizer]{thr_optimizer()}}  on a part of the graph induced by input
similarity matrix \code{S} corresponding only to vertices inside \code{partition} specified by \code{which_group}.
}
\details{
If \code{which_group} is an integer, then it must specify a group of nodes inside \code{partition} membership vector of size at least 2.
Otherwise, \code{NA} is returned.

Alternatively, \code{which_group} can be a character string, in which case allowable values are: \itemize{
\item \code{"biggest"} - set the subgraph to the biggest group present in \code{partition}.
}
}
\examples{
data(leukemia)
opt_res<-thr_optimizer(leukemia) 

#NOTE: using threshold for similariry matrix as below 
does not matter since we use cliques as partition (arg number 2)
#but in general it can matter if groups in `parition` are not 
#cliques.

opt_iter2<-local_thr_optimization(leukemia \%thr\% opt_res$thr, opt_res$maximizer_partition, "biggest")
print("first threshold")
print(opt_res$thr)
print("second threshold")
print(opt_iter2$thr)
heatmap(leukemia, scale="none", Rowv=NA, Colv=NA, main="original similarity matrix")
heatmap(leukemia \%thr\% opt_res$thr, scale="none", Rowv=NA, Colv=NA, main="thresholed similarity")
heatmap(leukemia \%thr\% opt_iter2$thr, scale="none", Rowv=NA, Colv=NA, main="thresholed similarity 2")
}
\seealso{
\code{\link[=thr_optimixer]{thr_optimixer()}}, \code{\link[=critical_mst_thr]{critical_mst_thr()}}, \code{\link[=\%thr\%]{\%thr\%()}}
}
